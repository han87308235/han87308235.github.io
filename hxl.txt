import React, {Component} from 'react';
import {Text, View, FlatList, Image, TouchableOpacity} from 'react-native';

class App extends Component {
  constructor(props) {
    super(props);
    this.state = {singerList: []};
  }

  renderSon = ({item, index}) => {
    return (
      <TouchableOpacity
        activeOpacity={0.1}
        key={index}
        style={{
          height: 110,
          flexDirection: 'row',
          justifyContent: 'space-between',
          alignItems: 'center',
          paddingTop: 5,
          paddingBottom: 5,
        }}>
        <Text>{index + 1}</Text>
        <Image source={{uri: item.img}} style={{height: 100, width: 130}} />
        <Text
          style={{fontSize: 12, textAlign: 'left', width: 180, height: 100}}>
          {item.name}
        </Text>
        <View style={{flexDirection: 'row', alignItems: 'center'}}>
          <TouchableOpacity
            onPress={() => {
              this.delIt(item);
            }}
            style={{
              width: 60,
              height: 40,
              backgroundColor: '#fff',
              alignItems: 'center',
              paddingRight: 10,
            }}>
            <Text
              style={{
                height: 30,
                width: 50,
                backgroundColor: '#05a5d1',
                textAlign: 'center',
                lineHeight: 30,
                color: '#fff',
              }}>
              删除
            </Text>
          </TouchableOpacity>
        </View>
      </TouchableOpacity>
    );
  };

  delIt(item) {
    var res = [...this.state.singerList];
    for (let i = 0; i < this.state.singerList.length; i++) {
      if (item.id === this.state.singerList[i].id) {
        res.splice(i, 1);
      }
    }
    this.setState({
      singerList: res,
    });
  }

  componentDidMount() {
    fetch('http://www.cjlly.com:3041/record')
      .then(res => res.json())
      .then(res => {
        this.setState({
          singerList: res,
        });
      });
  }

  render() {
    let {singerList} = this.state;
    return (
      <View>
        <FlatList
          data={singerList}
          renderItem={this.renderSon}
          refreshing={false}
          keyExtractor={(item, index) => index.toString()}
          ListEmptyComponent={<Text>无歌曲</Text>}
          ItemSeparatorComponent={() => {
            return <View style={{height: 1, backgroundColor: '#333'}} />;
          }}
        />
      </View>
    );
  }
}
export default App;
